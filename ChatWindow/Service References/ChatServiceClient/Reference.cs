//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ChatWindow.ChatServiceClient {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ChatServiceClient.IChatService")]
    public interface IChatService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatService/Hello", ReplyAction="http://tempuri.org/IChatService/HelloResponse")]
        void Hello(System.Uri address, string nick, string mac_hash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatService/Hello", ReplyAction="http://tempuri.org/IChatService/HelloResponse")]
        System.Threading.Tasks.Task HelloAsync(System.Uri address, string nick, string mac_hash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatService/Chat", ReplyAction="http://tempuri.org/IChatService/ChatResponse")]
        void Chat(string message, string mac_hash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatService/Chat", ReplyAction="http://tempuri.org/IChatService/ChatResponse")]
        System.Threading.Tasks.Task ChatAsync(string message, string mac_hash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatService/Bye", ReplyAction="http://tempuri.org/IChatService/ByeResponse")]
        void Bye(string mac_hash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatService/Bye", ReplyAction="http://tempuri.org/IChatService/ByeResponse")]
        System.Threading.Tasks.Task ByeAsync(string mac_hash);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IChatServiceChannel : ChatWindow.ChatServiceClient.IChatService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ChatServiceClient : System.ServiceModel.ClientBase<ChatWindow.ChatServiceClient.IChatService>, ChatWindow.ChatServiceClient.IChatService {
        
        public ChatServiceClient() {
        }
        
        public ChatServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ChatServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ChatServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ChatServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void Hello(System.Uri address, string nick, string mac_hash) {
            base.Channel.Hello(address, nick, mac_hash);
        }
        
        public System.Threading.Tasks.Task HelloAsync(System.Uri address, string nick, string mac_hash) {
            return base.Channel.HelloAsync(address, nick, mac_hash);
        }
        
        public void Chat(string message, string mac_hash) {
            base.Channel.Chat(message, mac_hash);
        }
        
        public System.Threading.Tasks.Task ChatAsync(string message, string mac_hash) {
            return base.Channel.ChatAsync(message, mac_hash);
        }
        
        public void Bye(string mac_hash) {
            base.Channel.Bye(mac_hash);
        }
        
        public System.Threading.Tasks.Task ByeAsync(string mac_hash) {
            return base.Channel.ByeAsync(mac_hash);
        }
    }
}
